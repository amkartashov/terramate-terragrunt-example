# this file is to be included into each terragrunt.hcl with:
#
#    include "root" {
#      path   = find_in_parent_folders("root.hcl")
#      expose = true
#    }
#
#    locals {
#      cfg = include.root.locals.cfg
#    }
#

locals {
  # Read _cfg_gen.hcl generated by terramate
  cfg = read_terragrunt_config(
    "./_cfg_gen.hcl"
  ).locals.cfg
}

terraform {
  before_hook "check terramate code generation" {
    # this hook will fail if
    # terragrunt code is not in sync
    # with terramate code
    commands = concat(
      get_terraform_commands_that_need_vars(),
      get_terraform_commands_that_need_input(),
      get_terraform_commands_that_need_locking(),
      get_terraform_commands_that_need_parallelism(),
    )
    execute = [
      "terramate",
      "run",
      "--quiet",
      "--dry-run",
      "echo",
      "ok",
    ]
  }

  before_hook "echo stack name" {
    commands = ["apply", "plan", "output"]
    execute = [
      "echo", format("====== %s/%s",
        local.cfg.environment,
        local.cfg.stack_name,
      )
    ]
  }
}


generate "tg_output" {
  path      = "tg_output.tf"
  if_exists = "overwrite_terragrunt"
  contents  = <<-EOF
    output "tg_cfg" {
      value = ${jsonencode(local.cfg)}
    }
  EOF
}
